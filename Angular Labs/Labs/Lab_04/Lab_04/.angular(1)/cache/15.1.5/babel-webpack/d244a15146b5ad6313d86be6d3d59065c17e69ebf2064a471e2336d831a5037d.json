{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor() {\n    // ngOnInit(): void {\n    //   this.heroForm = new FormGroup({\n    //     name: new FormControl(this.hero.name, [\n    //       Validators.required,\n    //       Validators.minLength(4),\n    //       forbiddenNameValidator(/bob/i) // <-- Here's how you pass in the custom validator.\n    //     ]),\n    //     alterEgo: new FormControl(this.hero.alterEgo),\n    //     power: new FormControl(this.hero.power, Validators.required)\n    //   });\n    // }\n    // get name() { return this.heroForm.get('name'); }\n    // get power() { return this.heroForm.get('power'); }\n    this.FormInputValidator = new FormGroup({\n      name: new FormControl('k', [Validators.required, Validators.minLength(3)]),\n      age\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)();\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 15,\n  vars: 0,\n  consts: [[1, \"w-50\", \"mx-auto\", \"p-5\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", 1, \"form-control\"], [\"for\", \"age\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"age\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Age\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵtext(14, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AAOnE,OAAM,MAAOC,iBAAiB;EAL9BC;IAME;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAEA;IAEA;IACA,uBAAkB,GAAG,IAAIH,SAAS,CAAC;MACjCI,IAAI,EAAE,IAAIL,WAAW,CAAC,GAAG,EAAE,CACzBE,UAAU,CAACI,QAAQ,EACnBJ,UAAU,CAACK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3BC;KACD,CAAC;;;AAtBSL,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAM;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR9BC,+BAA+B;MAEYA,oBAAI;MAAAA,iBAAQ;MACjDA,2BAAkD;MAEpDA,iBAAM;MACNA,8BAAkB;MACoBA,mBAAG;MAAAA,iBAAQ;MAC/CA,2BAAmD;MACrDA,iBAAM;MACNA,8BAAkB;MACwBA,sBAAK;MAAAA,iBAAQ;MACnDA,4BAAoD;MACtDA,iBAAM;MACRA,kCAA8C;MAAAA,uBAAM;MAAAA,iBAAS","names":["FormControl","FormGroup","Validators","RegisterComponent","constructor","name","required","minLength","age","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\00-Web development\\ITI\\ITI - INTENSIVE CODE CAMP\\Angular\\Labs\\Lab_04\\Lab_04\\src\\app\\register\\register.component.ts","D:\\00-Web development\\ITI\\ITI - INTENSIVE CODE CAMP\\Angular\\Labs\\Lab_04\\Lab_04\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent {\n  // ngOnInit(): void {\n  //   this.heroForm = new FormGroup({\n  //     name: new FormControl(this.hero.name, [\n  //       Validators.required,\n  //       Validators.minLength(4),\n  //       forbiddenNameValidator(/bob/i) // <-- Here's how you pass in the custom validator.\n  //     ]),\n  //     alterEgo: new FormControl(this.hero.alterEgo),\n  //     power: new FormControl(this.hero.power, Validators.required)\n  //   });\n\n  // }\n\n  // get name() { return this.heroForm.get('name'); }\n\n  // get power() { return this.heroForm.get('power'); }\n  FormInputValidator = new FormGroup({\n    name: new FormControl('k', [\n      Validators.required,\n      Validators.minLength(3)]),\n    age\n  });\n}\n","<form class=\"w-50 mx-auto p-5\">\n    <div class=\"mb-3\">\n      <label for=\"name\" class=\"form-label\">Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\">\n      <!-- <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div> -->\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"age\" class=\"form-label\">Age</label>\n      <input type=\"number\" class=\"form-control\" id=\"age\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"email\" class=\"form-label\">Email</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\">\n      </div>\n    <button type=\"button\" class=\"btn btn-warning\">Submit</button>\n  </form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}