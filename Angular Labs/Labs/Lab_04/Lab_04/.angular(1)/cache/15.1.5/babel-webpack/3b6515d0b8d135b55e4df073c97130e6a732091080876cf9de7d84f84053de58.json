{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction RegisterComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \"Required Filed\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor() {\n    // ngOnInit(): void {\n    //   this.heroForm = new FormGroup({\n    //     name: new FormControl(this.hero.name, [\n    //       Validators.required,\n    //       Validators.minLength(4),\n    //       forbiddenNameValidator(/bob/i) // <-- Here's how you pass in the custom validator.\n    //     ]),\n    //     alterEgo: new FormControl(this.hero.alterEgo),\n    //     power: new FormControl(this.hero.power, Validators.required)\n    //   });\n    // }\n    this.FormInputValidator = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      age: new FormControl(20, [Validators.required, Validators.min(20), Validators.max(40)]),\n      email: new FormControl('', [Validators.required, Validators.email])\n    });\n  }\n  get name() {\n    return this.FormInputValidator.get('name')?.valid;\n  }\n  get age() {\n    return this.FormInputValidator.get('age');\n  }\n  get email() {\n    return this.FormInputValidator.get('email');\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)();\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 16,\n  vars: 2,\n  consts: [[1, \"w-50\", \"mx-auto\", \"p-5\", 3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"age\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"age\", \"formControlName\", \"age\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\"], [1, \"alert\", \"alert-danger\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵtemplate(5, RegisterComponent_div_5_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Age\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"label\", 7);\n      i0.ɵɵtext(12, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 9);\n      i0.ɵɵtext(15, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.FormInputValidator);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", !ctx.name);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;ICG7DC,+BAA8C;IAAAA,8BAAc;IAAAA,iBAAM;;;ADIxE,OAAM,MAAOC,iBAAiB;EAL9BC;IAME;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAEA,uBAAkB,GAAG,IAAIJ,SAAS,CAAC;MACjCK,IAAI,EAAE,IAAIN,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACzEC,GAAG,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CACvBE,UAAU,CAACK,QAAQ,EACnBL,UAAU,CAACQ,GAAG,CAAC,EAAE,CAAC,EAClBR,UAAU,CAACS,GAAG,CAAC,EAAE,CAAC,CACnB,CAAC;MACFC,KAAK,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACU,KAAK,CAAC;KACnE,CAAC;;EAEF,IAAIN,IAAI;IACN,OAAO,IAAI,CAACO,kBAAkB,CAACC,GAAG,CAAC,MAAM,CAAC,EAAEC,KAAK;EACnD;EACA,IAAIN,GAAG;IACL,OAAO,IAAI,CAACI,kBAAkB,CAACC,GAAG,CAAC,KAAK,CAAC;EAC3C;EACA,IAAIF,KAAK;IACP,OAAO,IAAI,CAACC,kBAAkB,CAACC,GAAG,CAAC,OAAO,CAAC;EAC7C;;AAhCWV,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR9BjB,+BAAgE;MAErBA,oBAAI;MAAAA,iBAAQ;MACjDA,2BAA0E;MAC1EA,kEAAkE;MACpEA,iBAAM;MACNA,8BAAkB;MACoBA,mBAAG;MAAAA,iBAAQ;MAC/CA,2BAA0E;MAC5EA,iBAAM;MACNA,+BAAkB;MACwBA,sBAAK;MAAAA,iBAAQ;MACnDA,4BAA6E;MAC/EA,iBAAM;MACRA,kCAA+C;MAAAA,uBAAM;MAAAA,iBAAS;;;MAdnCA,kDAAgC;MAIxBA,eAAW;MAAXA,gCAAW","names":["FormControl","FormGroup","Validators","i0","RegisterComponent","constructor","name","required","minLength","age","min","max","email","FormInputValidator","get","valid","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\00-Web development\\ITI\\ITI - INTENSIVE CODE CAMP\\Angular\\Labs\\Lab_04\\Lab_04\\src\\app\\register\\register.component.ts","D:\\00-Web development\\ITI\\ITI - INTENSIVE CODE CAMP\\Angular\\Labs\\Lab_04\\Lab_04\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent {\n  // ngOnInit(): void {\n  //   this.heroForm = new FormGroup({\n  //     name: new FormControl(this.hero.name, [\n  //       Validators.required,\n  //       Validators.minLength(4),\n  //       forbiddenNameValidator(/bob/i) // <-- Here's how you pass in the custom validator.\n  //     ]),\n  //     alterEgo: new FormControl(this.hero.alterEgo),\n  //     power: new FormControl(this.hero.power, Validators.required)\n  //   });\n\n  // }\n\n  FormInputValidator = new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    age: new FormControl(20, [\n      Validators.required,\n      Validators.min(20),\n      Validators.max(40),\n    ]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n  });\n\n  get name() {\n    return this.FormInputValidator.get('name')?.valid;\n  }\n  get age() {\n    return this.FormInputValidator.get('age');\n  }\n  get email() {\n    return this.FormInputValidator.get('email');\n  }\n}\n","<form class=\"w-50 mx-auto p-5\" [formGroup]=\"FormInputValidator\">\n    <div class=\"mb-3\">\n      <label for=\"name\" class=\"form-label\">Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\"  formControlName=\"name\">\n      <div class=\"alert alert-danger\" *ngIf=\"!name\">Required Filed</div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"age\" class=\"form-label\">Age</label>\n      <input type=\"number\" class=\"form-control\" id=\"age\"  formControlName=\"age\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"email\" class=\"form-label\">Email</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\"  formControlName=\"email\">\n      </div>\n    <button type=\"button\" class=\"btn btn-warning\" >Submit</button>\n  </form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}